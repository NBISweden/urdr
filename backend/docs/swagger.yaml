basePath: /
definitions:
  api.IssueActivityResponse:
    properties:
      activity:
        $ref: '#/definitions/redmine.IdName'
      issue:
        $ref: '#/definitions/redmine.Issue'
    type: object
  api.LoginResponse:
    properties:
      login:
        type: string
      user_id:
        type: integer
    type: object
  api.SpentOnIssueActivityResponse:
    properties:
      activity:
        $ref: '#/definitions/redmine.IdName'
      hours:
        type: number
      issue:
        $ref: '#/definitions/redmine.Issue'
    type: object
  redmine.IdName:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  redmine.Issue:
    properties:
      assigned_to:
        $ref: '#/definitions/redmine.IdName'
      assigned_to_id:
        type: integer
      author:
        $ref: '#/definitions/redmine.IdName'
      category:
        $ref: '#/definitions/redmine.IdName'
      category_id:
        type: integer
      closed_on:
        type: string
      created_on:
        type: string
      description:
        type: string
      done_ratio:
        type: number
      due_date:
        type: string
      estimated_hours:
        type: number
      id:
        type: integer
      notes:
        type: string
      project:
        $ref: '#/definitions/redmine.IdName'
      project_id:
        type: integer
      start_date:
        type: string
      status:
        $ref: '#/definitions/redmine.IdName'
      status_date:
        type: string
      status_id:
        type: integer
      subject:
        type: string
      updated_on:
        type: string
    type: object
  redmine.TimeEntry:
    properties:
      activity_id:
        type: integer
      comments:
        type: string
      hours:
        type: integer
      issue_id:
        type: integer
      spent_on:
        type: string
      user_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    name: National Bioinformatics Infrastructure Sweden
    url: https://www.nbis.se
  description: This is the Urdr API.
  title: Urdr API
  version: "1.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: Log in a user using the Redmine API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Log in a user
  /api/logout:
    post:
      consumes:
      - application/json
      description: Log out a user by destroying the session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Log out a user
  /api/recent_issues:
    get:
      consumes:
      - application/json
      description: get recent issues
      parameters:
      - description: default
        in: header
        name: Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.IssueActivityResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: get recent issues
  /api/report:
    post:
      consumes:
      - application/json
      description: report time spent on issues
      parameters:
      - description: urdr_session=default
        in: body
        name: time_entry
        required: true
        schema:
          $ref: '#/definitions/redmine.TimeEntry'
      - description: default
        in: header
        name: Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: report time spent on issues
  /api/spent_time:
    get:
      consumes:
      - application/json
      description: get time entries within start and end dates
      parameters:
      - description: default
        in: header
        name: Cookie
        required: true
        type: string
      - description: start date
        in: query
        name: start_date
        required: true
        type: string
      - description: end date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.SpentOnIssueActivityResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: get time entries within a given time period
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
